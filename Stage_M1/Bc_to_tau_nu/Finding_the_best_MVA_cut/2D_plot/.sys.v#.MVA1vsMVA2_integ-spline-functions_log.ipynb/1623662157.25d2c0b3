{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "caroline-mechanics",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/cvmfs/sft.cern.ch/lcg/releases/Python/3.8.6-3199b/x86_64-centos7-gcc8-opt/lib/python3.8/_collections_abc.py:832: MatplotlibDeprecationWarning: Support for setting the 'text.latex.preamble' or 'pgf.preamble' rcParam to a list of strings is deprecated since 3.3 and will be removed two minor releases later; set it to a single string instead.\n",
      "  self[key] = other[key]\n"
     ]
    }
   ],
   "source": [
    "import pandas\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import scipy.interpolate as interpolate\n",
    "import pickle\n",
    "\n",
    "from matplotlib import rc\n",
    "rc('font',**{'family':'serif','serif':['Roman']})\n",
    "rc('text', usetex=True)\n",
    "params= {'text.latex.preamble' : [r'\\usepackage{amsmath}']}\n",
    "plt.rcParams.update(params)\n",
    "plt.rcParams['text.latex.preamble'] = r\"\\usepackage{bm} \\usepackage{amsmath}\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "durable-engineering",
   "metadata": {},
   "outputs": [],
   "source": [
    "bc_tree = uproot.open('/eos/experiment/fcc/ee/analyses/case-studies/flavour/Bc2TauNu/flatNtuples/spring2021/prod_04/Analysis_stage2/p8_ee_Zbb_ecm91_EvtGen_Bc2TauNuTAUHADNU.root')['events']\n",
    "bb_tree = uproot.open('/eos/experiment/fcc/ee/analyses/case-studies/flavour/Bc2TauNu/flatNtuples/spring2021/prod_04/Analysis_stage2/p8_ee_Zbb_ecm91_EvtGen.root')['events']\n",
    "tree_gen = uproot.open(\"/eos/experiment/fcc/ee/analyses/case-studies/flavour/Bc2TauNu/flatNtuples/spring2021/prod_04/Analysis_stage2/p8_ee_Zbb_ecm91_EvtGen_Bc2TauNuTAUHADNU.root\")[\"metadata\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "pointed-failing",
   "metadata": {},
   "outputs": [],
   "source": [
    "bc_df = bc_tree.arrays(library=\"pd\", how=\"zip\", filter_name=[\"EVT_*\"])\n",
    "bb_df = bb_tree.arrays(library=\"pd\", how=\"zip\", filter_name=[\"EVT_*\"])\n",
    "df_gen = tree_gen.arrays(library=\"pd\", how=\"zip\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "verified-music",
   "metadata": {},
   "outputs": [],
   "source": [
    "N_Z0 = 5*10**(12)\n",
    "BF_Zbb = 0.1512\n",
    "f_Bc = 0.0004\n",
    "f_Bu = 0.43\n",
    "BF_Bctaunu = 0.0194\n",
    "BF_Butaunu = 1.09*10**(-4)\n",
    "BF_tau3pion = 0.0931"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "federal-oklahoma",
   "metadata": {},
   "outputs": [],
   "source": [
    "def S_cut(initial_eff_signal, cut_eff) :\n",
    "    return N_Z0*BF_Zbb*2*f_Bc*BF_Bctaunu*BF_tau3pion*initial_eff_signal*cut_eff\n",
    "\n",
    "def B_incl_cut(initial_eff_incl_bkg, cut_eff) :\n",
    "    return N_Z0*BF_Zbb*2*initial_eff_incl_bkg*cut_eff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "shaped-effect",
   "metadata": {},
   "outputs": [],
   "source": [
    "spline_MVA1_log = pickle.load(open('Spline_functions/MVA1_spline_log.pkl','rb'))\n",
    "spline_MVA2_log = pickle.load(open('Spline_functions/MVA2_spline_log.pkl','rb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "funded-license",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "plt.imshow(p_tab, cmap='Greens', origin='lower', extent=(cut_1[0], cut_1[-1], cut_2[0], cut_2[-1])) #(vmin=0, vmax=0.01)\n",
    "plt.xlabel('Value of the MVA1 cut')\n",
    "plt.ylabel('Value of the MVA2 cut')\n",
    "plt.title(r'Purity for $B_c^+ \\rightarrow \\tau^+ \\nu_\\tau$ and inclusive $b\\bar{b}$ bkg')\n",
    "plt.xlim(cut_1[0],cut_1[-1])\n",
    "plt.ylim(cut_2[0],cut_2[-1])\n",
    "plt.colorbar()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "renewable-contact",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9996645373720975\n",
      "6.907755278982136\n",
      "eff sig 0.4594148\n",
      "eff bkg 0.0186757\n",
      " \n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 135.3113786502134. MVA1cut = 6.907755278982136\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 127.15854453825635. MVA1cut = 6.959048573369681\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 119.06354055680119. MVA1cut = 7.01311579463995\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 111.03426269263755. MVA1cut = 7.0702742084798915\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 103.07941728443237. MVA1cut = 7.130898830296318\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " \n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 95.20856889625887. MVA1cut = 7.19543735143388\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 87.43216155191573. MVA1cut = 7.264430222920821\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 79.76148854236115. MVA1cut = 7.3385381950745305\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 72.20856823181113. MVA1cut = 7.418580902748053\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 64.78585260678192. MVA1cut = 7.505592279737666\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " \n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 57.50564205765009. MVA1cut = 7.60090245954197\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 50.3789875656371. MVA1cut = 7.706262975199772\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 43.41370501697613. MVA1cut = 7.824046010856125\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 36.61088361320649. MVA1cut = 7.957577403480608\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 29.959017343210984. MVA1cut = 8.111728083307813\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 23.42538092980998. MVA1cut = 8.294049640101694\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 16.950556317428124. MVA1cut = 8.517193191415792\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 10.499417883810622. MVA1cut = 8.804875263867388\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 4.407497695363382. MVA1cut = 9.210340371975184\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n",
      " \n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 2.7522174486566735. MVA2 cut = 6.907755278982136\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 2.4266499282765293. MVA2 cut = 6.959048573369681\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 2.117906115609903. MVA2 cut = 7.01311579463995\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 1.8271529492084546. MVA2 cut = 7.0702742084798915\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 1.5555611083817305. MVA2 cut = 7.130898830296318\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 1.3042531312731547. MVA2 cut = 7.19543735143388\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 1.0742167284253954. MVA2 cut = 7.264430222920821\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 0.8661608888911536. MVA2 cut = 7.3385381950745305\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 0.6802762243877515. MVA2 cut = 7.418580902748053\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 0.5158312541896131. MVA2 cut = 7.505592279737666\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 0.37047942844109655. MVA2 cut = 7.60090245954197\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 0.2390378093542127. MVA2 cut = 7.706262975199772\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 0.11125792061555548. MVA2 cut = 7.824046010856125\n",
      "Integral value MVA1 = 0.18047015103185454. MVA1cut = 9.903487552534017\n",
      "Integral value MVA2 = 0.0. MVA2 cut = 7.957577403480608\n"
     ]
    }
   ],
   "source": [
    "cut_step = 0.00005\n",
    "\n",
    "#MVA1\n",
    "var1 = 'EVT_MVA1'\n",
    "min_cut_1 = 0.999\n",
    "max_cut_1 = 1-np.exp(-10) #bb_df[var1].max()\n",
    "min_cut_1_log = -np.log(1 - min_cut_1) #log\n",
    "max_cut_1_log = -np.log(1 - max_cut_1) #log\n",
    "nb_bkg_events_1 = interpolate.splint(min_cut_1_log, max_cut_1_log, spline_MVA1_log) #log\n",
    "\n",
    "#MVA2\n",
    "var2 = 'EVT_MVA2'\n",
    "min_cut_2 = 0.999\n",
    "max_cut_2 = 1-np.exp(-8) # #bb_df[var2].max()\n",
    "min_cut_2_log = -np.log(1 - min_cut_2) #log\n",
    "max_cut_2_log =  -np.log(1 - max_cut_2) #log\n",
    "nb_bkg_events_2 = interpolate.splint(min_cut_2_log, max_cut_2_log, spline_MVA2_log) #log\n",
    "print(max_cut_2)\n",
    "print(min_cut_2_log )\n",
    "\n",
    "#Parameters\n",
    "nb_total_events = df_gen.iloc[0][\"eventsProcessed\"]\n",
    "nb_signal_events = len(bc_df['EVT_MVA1'])\n",
    "nb_bkg_events = len(bb_df['EVT_MVA1'])\n",
    "\n",
    "initial_eff_signal = nb_signal_events / nb_total_events\n",
    "initial_eff_incl_bkg = nb_bkg_events / nb_total_events\n",
    "\n",
    "print('eff sig {}'.format(initial_eff_signal))\n",
    "print('eff bkg {}'.format(initial_eff_incl_bkg))\n",
    "\n",
    "#np.array()\n",
    "cut_1 = np.arange(min_cut_1, max_cut_1, cut_step)\n",
    "cut_2 = np.arange(min_cut_2, max_cut_2, cut_step)\n",
    "p_tab = np.zeros((np.size(cut_2),np.size(cut_1)))\n",
    "s_tab = np.zeros((np.size(cut_2),np.size(cut_1)))\n",
    "b_tab = np.zeros((np.size(cut_2),np.size(cut_1)))\n",
    "\n",
    "#print(cut_1)\n",
    "#print(-np.log(1-cut_1))\n",
    "#print(cut_2)\n",
    "#print(-np.log(1-cut_1))\n",
    "\n",
    "\n",
    "for i1, cut_i1 in enumerate(cut_1) :\n",
    "    \n",
    "    cut_i1_log = -np.log(1-cut_i1) #log\n",
    "    \n",
    "    df_signal_ = bc_df[(bc_df[var1]>cut_i1)]\n",
    "    print(' ')\n",
    "    \n",
    "    for i2, cut_i2 in enumerate(cut_2) :\n",
    "        \n",
    "        cut_i2_log = -np.log(1-cut_i2) #log\n",
    "\n",
    "        df_signal = df_signal_[df_signal_[var2]>cut_i2]\n",
    "\n",
    "        nb_signal_both_cut = len(df_signal)\n",
    "        nb_bkg_cut_i1 = interpolate.splint(cut_i1_log, max_cut_1_log, spline_MVA1_log) #log\n",
    "        nb_bkg_cut_i2 = interpolate.splint(cut_i2_log, max_cut_2_log, spline_MVA2_log) #log\n",
    "        #print(nb_bkg_cut_i1)\n",
    "        print('Integral value MVA1 = {}. MVA1cut = {}'.format(nb_bkg_cut_i1, cut_i1_log))\n",
    "        print('Integral value MVA2 = {}. MVA2 cut = {}'.format(nb_bkg_cut_i2, cut_i2_log))\n",
    "        #print('cut_i2 = {} et cut_max = {}'.format(cut_i2_log,max_cut_2_log))\n",
    "\n",
    "        signal_cut_eff = nb_signal_both_cut / nb_signal_events\n",
    "        bkg_cut_eff = (nb_bkg_cut_i1 / nb_bkg_events_1) * (nb_bkg_cut_i2 / nb_bkg_events_2)\n",
    "\n",
    "        s = S_cut(initial_eff_incl_bkg, signal_cut_eff)\n",
    "        b = B_incl_cut(initial_eff_incl_bkg, bkg_cut_eff) \n",
    "        \n",
    "        s_tab[i2,i1] = s\n",
    "        b_tab[i2,i1] = b\n",
    "        p_tab[i2,i1] = s/(s+b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "invisible-asset",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "interpolate.splint(7.957577403480608, max_cut_2_log, spline_MVA2_log)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "statutory-senator",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7.999999999999987\n"
     ]
    }
   ],
   "source": [
    "print(max_cut_2_log)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "institutional-proceeding",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "plt.imshow(s_tab, cmap='Blues', origin='lower', extent=(cut_1[0], cut_1[-1], cut_2[0], cut_2[-1])) #(vmin=0, vmax=0.01)\n",
    "plt.xlabel('Value of the MVA1 cut')\n",
    "plt.ylabel('Value of the MVA2 cut')\n",
    "plt.title('S(MVA1,MVA2)')\n",
    "plt.xlim(cut_1[0],cut_1[-1])\n",
    "plt.ylim(cut_2[0],cut_2[-1])\n",
    "plt.colorbar()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "clear-tradition",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "plt.imshow(b_tab, cmap='Purples', origin='lower', extent=(cut_1[0], cut_1[-1], cut_2[0], cut_2[-1])) #(vmin=0, vmax=0.01)\n",
    "plt.xlabel('Value of the MVA1 cut')\n",
    "plt.ylabel('Value of the MVA2 cut')\n",
    "plt.title(r'B(MVA1,MVA2)')\n",
    "plt.xlim(cut_1[0],cut_1[-1])\n",
    "plt.ylim(cut_2[0],cut_2[-1])\n",
    "plt.colorbar()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "behavioral-concentrate",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
