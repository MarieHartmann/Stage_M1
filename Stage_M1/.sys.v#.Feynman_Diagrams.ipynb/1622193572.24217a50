{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# How to draw Feynman diagrams"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Tout d'abord, il faut définir les points de départ, d'arrivée et de vertex de notre diagramme. Pour cela on utilise la commande .vertex(xy=(coord_x, coord_y))."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ensuite, on peut relier les points entre eux à l'aide la commande .line . On donnera en argument le point de départ de la ligne (fléchée par défaut) et le point d'arrivée. Pour que la flèche aille dans le sens inverse pour les antiparticules il faut inverser point de départ et d'arrivée dans les arguments."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# $b \\rightarrow c\\tau\\nu_\\tau$ "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import latex\n",
    "from feynman import Diagram"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/cvmfs/sft.cern.ch/lcg/releases/Python/3.8.6-3199b/x86_64-centos7-gcc8-opt/lib/python3.8/_collections_abc.py:832: MatplotlibDeprecationWarning: Support for setting the 'text.latex.preamble' or 'pgf.preamble' rcParam to a list of strings is deprecated since 3.3 and will be removed two minor releases later; set it to a single string instead.\n",
      "  self[key] = other[key]\n"
     ]
    }
   ],
   "source": [
    "from matplotlib import rc\n",
    "rc('font',**{'family':'serif','serif':['Roman']})\n",
    "rc('text', usetex=True)\n",
    "params= {'text.latex.preamble' : [r'\\usepackage{amsmath}']}\n",
    "plt.rcParams.update(params)\n",
    "plt.rcParams['text.latex.preamble'] = r\"\\usepackage{bm} \\usepackage{amsmath}\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8.,8.))\n",
    "\n",
    "ax = fig.add_axes([0,0,1,1], frameon=False)\n",
    "\n",
    "diagram = Diagram(ax)\n",
    "\n",
    "b_in = diagram.vertex(xy=(0.1,0.5),marker='')\n",
    "v_bc = diagram.vertex(xy=(0.5,0.5))\n",
    "\n",
    "#d_in = diagram.vertex(xy=(0.1,0.3),marker='*')\n",
    "#d_out = diagram.vertex(xy=(0.9,0.3),marker='')\n",
    "\n",
    "c_out = diagram.vertex(xy=(0.9,0.5),marker='')\n",
    "\n",
    "w_out = diagram.vertex(xy=(0.7,0.8))\n",
    "\n",
    "l_out = diagram.vertex(xy=(0.9,0.9),marker='')\n",
    "nu_out = diagram.vertex(xy=(0.9,0.7),marker='')\n",
    "\n",
    "#Draw anti-particles backwards (end vertex first)\n",
    "b = diagram.line(v_bc, b_in)\n",
    "#t is position along the line, y is position perpendicular to the line\n",
    "b.text(r\"$\\bar{b}$\",fontsize=30,t=0.99,y=-0.02)\n",
    "\n",
    "#d = diagram.line(d_in, d_out)\n",
    "#d.text(r\"$d$\",fontsize=30)\n",
    "\n",
    "w = diagram.line(v_bc, w_out, arrow=False, style='wiggly', nwiggles=4)\n",
    "w.text(r\"$W^+$\",fontsize=30,y=-0.05, color='#f03b20')\n",
    "\n",
    "c = diagram.line(c_out, v_bc)\n",
    "c.text(r\"$\\bar{c}$\",fontsize=30, t=0.05,y=-0.02)\n",
    "\n",
    "l = diagram.line(l_out,w_out)\n",
    "l.text(r\"$\\tau^+$\",fontsize=30,t=0.,y=-0.02)\n",
    "\n",
    "nu = diagram.line(w_out,nu_out)\n",
    "nu.text(r\"$\\nu_\\tau$\",fontsize=30,t=0.85,y=0.02)\n",
    "\n",
    "#plt.text(0.1,0.37,'$B^0$',fontsize=50,color='navy')\n",
    "#plt.text(0.8,0.37,'$D^{*-}$',fontsize=50,color='navy')\n",
    "\n",
    "diagram.plot()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8.,8.))\n",
    "\n",
    "ax = fig.add_axes([0,0,1,1], frameon=False)\n",
    "\n",
    "diagram = Diagram(ax)\n",
    "\n",
    "b_in = diagram.vertex(xy=(0.1,0.5),marker='')\n",
    "v_bc = diagram.vertex(xy=(0.5,0.5))\n",
    "\n",
    "d_in = diagram.vertex(xy=(0.1,0.3),marker='')\n",
    "d_out = diagram.vertex(xy=(0.9,0.3),marker='')\n",
    "\n",
    "c_out = diagram.vertex(xy=(0.9,0.5),marker='')\n",
    "\n",
    "w_out = diagram.vertex(xy=(0.7,0.8))\n",
    "\n",
    "l_out = diagram.vertex(xy=(0.9,0.9),marker='')\n",
    "nu_out = diagram.vertex(xy=(0.9,0.7),marker='')\n",
    "\n",
    "#Draw anti-particles backwards (end vertex first)\n",
    "b = diagram.line(v_bc, b_in)\n",
    "#t is position along the line, y is position perpendicular to the line\n",
    "b.text(r\"$\\bar{b}$\",fontsize=30,t=0.99,y=-0.02)\n",
    "\n",
    "d = diagram.line(d_in, d_out)\n",
    "d.text(r\"$d$\",fontsize=30)\n",
    "\n",
    "w = diagram.line(v_bc, w_out, arrow=False, style='wiggly', nwiggles=4)\n",
    "w.text(r\"$W^+$\",fontsize=30,y=-0.05, color='#f03b20')\n",
    "\n",
    "c = diagram.line(c_out, v_bc)\n",
    "c.text(r\"$\\bar{c}$\",fontsize=30, t=0.05,y=-0.02)\n",
    "\n",
    "l = diagram.line(l_out,w_out)\n",
    "l.text(r\"$\\tau^+$\",fontsize=30,t=0.,y=-0.02)\n",
    "\n",
    "nu = diagram.line(w_out,nu_out)\n",
    "nu.text(r\"$\\nu_\\tau$\",fontsize=30,t=0.85,y=0.02)\n",
    "\n",
    "plt.text(0.1,0.37,'$B^0$',fontsize=50,color='navy')\n",
    "plt.text(0.8,0.37,'$D^{*-}$',fontsize=50,color='navy')\n",
    "\n",
    "diagram.plot()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8.,8.))\n",
    "\n",
    "ax = fig.add_axes([0,0,1,1], frameon=False)\n",
    "\n",
    "diagram = Diagram(ax)\n",
    "\n",
    "b_in = diagram.vertex(xy=(0.1,0.5),marker='')\n",
    "v_bc = diagram.vertex(xy=(0.5,0.5))\n",
    "\n",
    "d_in = diagram.vertex(xy=(0.1,0.3),marker='')\n",
    "d_out = diagram.vertex(xy=(0.9,0.3),marker='')\n",
    "\n",
    "c_out = diagram.vertex(xy=(0.9,0.5),marker='')\n",
    "\n",
    "w_out = diagram.vertex(xy=(0.7,0.8))\n",
    "\n",
    "l_out = diagram.vertex(xy=(0.9,0.9),marker='')\n",
    "nu_out = diagram.vertex(xy=(0.9,0.7),marker='')\n",
    "\n",
    "#Draw anti-particles backwards (end vertex first)\n",
    "b = diagram.line(v_bc, b_in)\n",
    "#t is position along the line, y is position perpendicular to the line\n",
    "b.text(r\"$\\bar{b}$\",fontsize=40,t=0.99,y=-0.02)\n",
    "\n",
    "d = diagram.line(d_in, d_out)\n",
    "d.text(r\"$d$\",fontsize=40, y=-0.075)\n",
    "\n",
    "w = diagram.line(v_bc, w_out, arrow=False, style='wiggly', nwiggles=4)\n",
    "w.text(r\"$W^+$\",fontsize=40,y=-0.05, color='#f03b20')\n",
    "\n",
    "c = diagram.line(c_out, v_bc)\n",
    "c.text(r\"$\\bar{c}$\",fontsize=40, t=0.05,y=-0.02)\n",
    "\n",
    "l = diagram.line(l_out,w_out)\n",
    "l.text(r\"$\\tau^+$\",fontsize=40,t=0.,y=-0.02)\n",
    "\n",
    "nu = diagram.line(w_out,nu_out)\n",
    "nu.text(r\"$\\nu_\\tau$\",fontsize=40,t=0.85,y=0.02)\n",
    "\n",
    "plt.text(0.1,0.37,'$B^0$',fontsize=50,color='navy')\n",
    "plt.text(0.8,0.37,'$D^{*-}$',fontsize=50,color='navy')\n",
    "\n",
    "diagram.plot()\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig.savefig(\".bd2dsttaunu.pdf\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# $bc \\rightarrow \\tau \\nu_\\tau$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Selon le Modèle Standard"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8.,8.))\n",
    "ax = fig.add_axes([0,0,1,1], frameon=False)\n",
    "#les axes x et y prendront des valeurs entre 0 et 1\n",
    "\n",
    "diagram = Diagram(ax)\n",
    "\n",
    "b_in = diagram.vertex(xy=(0.1,0.7),marker='')\n",
    "c_in = diagram.vertex(xy=(0.1,0.3),marker='')\n",
    "\n",
    "v_bc = diagram.vertex(xy=(0.3,0.5), marker='')\n",
    "v_tn = diagram.vertex(xy=(0.7,0.5), marker='')\n",
    "\n",
    "tau_out = diagram.vertex(xy=(0.9,0.7),marker='')\n",
    "nu_out = diagram.vertex(xy=(0.9,0.3),marker='')\n",
    "\n",
    "\n",
    "b = diagram.line(v_bc, b_in)\n",
    "c = diagram.line(c_in, v_bc)\n",
    "\n",
    "w = diagram.line(v_bc, v_tn, arrow=False, style='wiggly', nwiggles=4)\n",
    "\n",
    "t = diagram.line(tau_out,v_tn)\n",
    "nu = diagram.line(v_tn,nu_out)\n",
    "\n",
    "\n",
    "b.text(r\"$\\bar{b}$\",fontsize=30,t=0.999,y=-0.02)\n",
    "c.text(r\"$c$\",fontsize=30, t=0,y=-0.03)\n",
    "t.text(r\"$\\tau^+$\",fontsize=30,t=0,y=-0.02)\n",
    "nu.text(r\"$\\nu_\\tau$\",fontsize=30,t=0.99,y=-0.05)\n",
    "\n",
    "w.text(r\"$W^+$\",fontsize=30,t=0.42, y=-0.09, color='#f03b20')\n",
    "\n",
    "plt.text(0.05,0.48,'$B_c^+$',fontsize=50,color='navy')\n",
    "\n",
    "\n",
    "diagram.plot()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Selon la théorie de Nouvelle Physique du doublet de 2-Higgs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8.,8.))\n",
    "ax = fig.add_axes([0,0,1,1], frameon=False)\n",
    "#les axes x et y prendront des valeurs entre 0 et 1\n",
    "\n",
    "diagram = Diagram(ax)\n",
    "\n",
    "b_in = diagram.vertex(xy=(0.1,0.7),marker='')\n",
    "c_in = diagram.vertex(xy=(0.1,0.3),marker='')\n",
    "\n",
    "v_bc = diagram.vertex(xy=(0.3,0.5), marker='')\n",
    "v_tn = diagram.vertex(xy=(0.7,0.5), marker='')\n",
    "\n",
    "tau_out = diagram.vertex(xy=(0.9,0.7),marker='')\n",
    "nu_out = diagram.vertex(xy=(0.9,0.3),marker='')\n",
    "\n",
    "\n",
    "b = diagram.line(v_bc, b_in)\n",
    "c = diagram.line(c_in, v_bc)\n",
    "\n",
    "h = diagram.line(v_bc, v_tn, arrow=False, style='dashed')\n",
    "\n",
    "t = diagram.line(tau_out,v_tn)\n",
    "nu = diagram.line(v_tn,nu_out)\n",
    "\n",
    "\n",
    "b.text(r\"$\\bar{b}$\",fontsize=30,t=0.999,y=-0.02)\n",
    "c.text(r\"$c$\",fontsize=30, t=0,y=-0.03)\n",
    "t.text(r\"$\\tau^+$\",fontsize=30,t=0,y=-0.02)\n",
    "nu.text(r\"$\\nu_\\tau$\",fontsize=30,t=0.9,y=-0.075)\n",
    "\n",
    "h.text(r\"$H^+$\",fontsize=30,t=0.42, y=-0.07, color='#3182bd')\n",
    "\n",
    "plt.text(0.05,0.48,'$B_c^+$',fontsize=50,color='navy')\n",
    "\n",
    "diagram.plot()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Selon la théorie de Nouvelle Physique des Leptoquarks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8.,8.))\n",
    "ax = fig.add_axes([0,0,1,1], frameon=False)\n",
    "#les axes x et y prendront des valeurs entre 0 et 1\n",
    "\n",
    "diagram = Diagram(ax)\n",
    "\n",
    "b_in = diagram.vertex(xy=(0.1,0.7),marker='')\n",
    "c_in = diagram.vertex(xy=(0.1,0.3),marker='')\n",
    "\n",
    "v_bt = diagram.vertex(xy=(0.5,0.6), marker='')\n",
    "v_cn = diagram.vertex(xy=(0.5,0.4), marker='')\n",
    "\n",
    "tau_out = diagram.vertex(xy=(0.9,0.7),marker='')\n",
    "nu_out = diagram.vertex(xy=(0.9,0.3),marker='')\n",
    "\n",
    "\n",
    "b = diagram.line(v_bt, b_in)\n",
    "c = diagram.line(c_in, v_cn)\n",
    "\n",
    "y = diagram.line(v_bt, v_cn, arrow=False, linestyle='--')\n",
    "\n",
    "t = diagram.line(tau_out,v_bt)\n",
    "nu = diagram.line(v_cn,nu_out)\n",
    "\n",
    "\n",
    "b.text(r\"$\\bar{b}$\",fontsize=30,t=0.999,y=-0.02)\n",
    "c.text(r\"$c$\",fontsize=30, t=0,y=-0.05)\n",
    "t.text(r\"$\\tau^+$\",fontsize=30,t=0,y=-0.02)\n",
    "nu.text(r\"$\\nu_\\tau$\",fontsize=30,t=0.99,y=-0.05)\n",
    "\n",
    "y.text(r\"$Y_{-2/3}$\",fontsize=30,t=0.52, y=0.03, color='#3182bd')\n",
    "\n",
    "plt.text(0.05,0.48,'$B_c^+$',fontsize=50,color='navy')\n",
    "\n",
    "\n",
    "diagram.plot()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
